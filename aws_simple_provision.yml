---
- hosts: localhost
  tasks:

  - name: Gather information of the EC2 VPC net in us-east-1
    ec2_vpc_net_facts:
      region: us-east-1
    register: aws_simple_net
############################################################################################################
  - name: Gather information of the EC2 VPC subnet in us-east-1
    ec2_vpc_subnet_facts:
      region: us-east-1
      filters:
        vpc-id: '{{ aws_simple_net.vpcs.0.id }}'
    register: aws_simple_subnet
############################################################################################################
  - name: Ensure TCP 5000 Security Group is present
    ec2_group:
      name: wssg
      description: Web Security Group
      region: us-east-1
      vpc_id: '{{ aws_simple_net.vpcs.0.id }}'        # We're getting this information from the previous task
      rules:                                          # Inbound rules
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 5000
        to_port: 5000
        cidr_ip: 0.0.0.0/0
      rules_egress:                                   # Outbound rules
      - proto: all
        cidr_ip: 0.0.0.0/0
    register: aws_simple_wssg
############################################################################################################
  - name: Create new ec2 OpenSSH key-pair
    ec2_key:
      name: DEVOPS-75
      region: us-east-1
    register: new_keypair
############################################################################################################
  - name: Spinup instance
    ec2:
      assign_public_ip: True
      image: ami-b73b63a0                             # Amazon Linux AMI 2016.09.0 (HVM), SSD Volume Type
      region: us-east-1
      count: 1
      key_name: DEVOPS-75                             # SSH key
      instance_tags:
        Name: DEVOPS-75
      instance_type: t2.micro
      group_id: '{{ aws_simple_wssg.group_id }}'      # Security group ID from the previous step
      vpc_subnet_id: '{{ aws_simple_subnet.subnets.0.id }}'
      state: running
      volumes:
        - device_name: /dev/sda1
          volume_type: gp2
          volume_size: 10
          delete_on_termination: True
    register: ec2
############################################################################################################
  - name: Add new instance to the host group
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: ec2launched
    with_items: "{{ ec2.instances }}"
############################################################################################################
  - name: Wait for SSH to come up
    wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
    with_items: "{{ ec2.instances }}"
############################################################################################################
- name: Configure instance(s)
  hosts: ec2launched
  become: True
  gather_facts: True
  tasks:

  - name: Create a folder where to put Git files
    file:
      path: /srv/checkout                         # Create a directory if it doesn't exist
      state: directory
      mode: 0755
############################################################################################################
  - name: Get App files from the Bitbucket
    git:
      repo: git@github.com:luckylittle/cba-system-engineer.git
      dest: /srv/checkout
############################################################################################################
  - name: Install requirements for the app
    command: pip install -r /srv/checkout/requirements.txt
############################################################################################################    
  - name: Run the app
    command: python /srv/checkout/app/app.py